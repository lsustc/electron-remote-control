{"version":3,"sources":["../external \"electron\"","peer-puppet.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","require","getScreenStream","a","desktopCapturer","getSources","types","sources","Promise","resolve","reject","navigator","getUserMedia","audio","video","mandatory","chromeMediaSource","chromeMediaSourceId","id","maxWidth","window","screen","width","maxHeight","height","stream","err","pc","RTCPeerConnection","ondatachannel","e","console","log","channel","onmessage","JSON","parse","data","type","ipcRenderer","send","onicecandidate","candidate","stringify","on","addIceCandidate","candidates","push","remoteDescription","i","length","RTCIceCandidate","createAnswer","offer","screenStream","addStream","setRemoteDescription","setLocalDescription","localDescription","answer","sdp","Menu","remote","MenuItem","App","useState","remoteCode","setRemoteCode","localCode","setLocalCode","controlText","setControlText","login","invoke","code","handleControlState","name","text","useEffect","removeListener","className","onContextMenu","preventDefault","menu","append","label","role","popup","handleContextMenu","value","onChange","target","onClick","startControl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ec9c8ec.chunk.js","sourcesContent":["module.exports = require(\"electron\");","// createAnswer\r\n// addstream\r\nimport {desktopCapturer, ipcRenderer} from 'electron';\r\nasync function getScreenStream() {\r\n    const sources = await desktopCapturer.getSources({types: ['screen']});\r\n    return new Promise((resolve, reject) => {\r\n        navigator.getUserMedia({\r\n            audio: false,\r\n            video: {\r\n                mandatory: {\r\n                    chromeMediaSource: 'desktop',\r\n                    chromeMediaSourceId: sources[0].id,\r\n                    maxWidth: window.screen.width,\r\n                    maxHeight: window.screen.height\r\n                }\r\n            }\r\n        }, (stream) => {\r\n            resolve(stream);\r\n            // peer.emit('add-stream', stream);\r\n        }, (err) => {\r\n            //handle err\r\n            reject(err)\r\n            // console.error(err)\r\n        });\r\n    });\r\n    \r\n}\r\nconst pc = new window.RTCPeerConnection({})\r\n\r\npc.ondatachannel = (e) => {\r\n    console.log('datachannel', e);\r\n    e.channel.onmessage = (e) => {\r\n        let {type, data} = JSON.parse(e.data);\r\n            if (type === 'mouse') {\r\n                data.screen = {\r\n                    width: window.screen.width,\r\n                    height: window.screen.height\r\n                }\r\n            }\r\n            ipcRenderer.send('robot', type, data);\r\n\r\n    }\r\n}\r\n\r\npc.onicecandidate = function(e) {\r\n    if (e.candidate && JSON.stringify(e.candidate) !== '{}') {\r\n        console.log('puppet-candidate', JSON.stringify(e.candidate));\r\n        ipcRenderer.send('forward', 'puppet-candidate', JSON.stringify(e.candidate));\r\n    }\r\n    \r\n}\r\n\r\nipcRenderer.on('candidate', (e, candidate) => {\r\n    console.log('pu-can', candidate);\r\n    addIceCandidate(JSON.parse(candidate.data));\r\n})\r\n\r\nlet candidates = [];\r\nasync function addIceCandidate(candidate) {\r\n    if (candidate) {\r\n        candidates.push(candidate);\r\n    }\r\n    if (pc.remoteDescription && pc.remoteDescription.type) {\r\n        for(let i = 0; i < candidates.length; i++) {\r\n            await pc.addIceCandidate(new RTCIceCandidate(candidates[i]));\r\n        }\r\n        candidates = [];\r\n    }\r\n}\r\n\r\nwindow.addIceCandidate = addIceCandidate;\r\nipcRenderer.on('offer', async (e, offer) => {\r\n    let answer = await createAnswer(offer);\r\n    ipcRenderer.send('forward', 'answer', {type: answer.type, sdp: answer.sdp})\r\n});\r\nasync function createAnswer(offer) {\r\n    let screenStream = await getScreenStream();\r\n\r\n    console.log('offer', offer);\r\n    pc.addStream(screenStream);\r\n    await pc.setRemoteDescription(offer.data);\r\n    await pc.setLocalDescription(await pc.createAnswer());\r\n    console.log('answer', JSON.stringify(pc.localDescription));\r\n    return pc.localDescription;\r\n}\r\n\r\nwindow.createAnswer = createAnswer;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {ipcRenderer, remote} from 'electron';\nimport './peer-puppet.js';\nconst {Menu, MenuItem} = remote;\n\nfunction App() {\n    const [remoteCode, setRemoteCode] = useState('');\n    const [localCode, setLocalCode] = useState('');\n    // 0未连接，1已控制，2被控制\n    const [controlText, setControlText] = useState(''); \n\n    const startControl = (remoteCode) => {\n        console.log(ipcRenderer.send);\n        ipcRenderer.send('control', remoteCode)\n    }\n    const login = async () => {\n        let code = await ipcRenderer.invoke('login')\n        setLocalCode(code)\n    }\n\n    const handleControlState = (e, name, type) => {\n        let text = ''\n        if(type === 1) {\n            text = `正在远程控制${name}`\n        } else if(type === 2) {\n            text = `被${name}控制中`\n        } else {\n            text = ''\n        }\n        setControlText(text)\n    }\n\n    useEffect(() => {\n        login()\n        ipcRenderer.on('control-state-change', handleControlState)\n        return () => {\n            ipcRenderer.removeListener('control-state-change', handleControlState)\n        }\n    }, [])\n    const handleContextMenu = (e) => {\n        e.preventDefault();\n        const menu = new Menu();\n        menu.append(new MenuItem({label: '复制', role: 'copy'}));\n        menu.popup();\n    }\n    return (\n        <div className=\"App\">\n            {\n                controlText === '' ? <>\n                    <div>你的控制码<span onContextMenu={(e) => handleContextMenu(e)}>{localCode}</span></div>\n                    <input type=\"text\" value={remoteCode} onChange={(e) => setRemoteCode(e.target.value)}/>\n                    <button onClick={() => {startControl(remoteCode)}}>确认</button>\n                </> : <div>{controlText}</div>\n            }\n        </div>\n    );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}